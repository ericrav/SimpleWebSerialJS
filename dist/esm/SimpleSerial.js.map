{"version":3,"file":"SimpleSerial.js","sources":["../../src/SimpleSerial.js"],"sourcesContent":["'use strict';\r\n\r\nconst DEFAULT_BAUDRATE = 57600;\r\nconst NEW_LINE = '\\n';\r\n\r\nclass LineBreakTransformer {\r\n    constructor() {\r\n        // A container for holding stream data until a new line.\r\n        this.chunks = \"\";\r\n    }\r\n\r\n    transform(chunk, controller) {\r\n        // Append new chunks to existing chunks.\r\n        this.chunks += chunk;\r\n        // For each line breaks in chunks, send the parsed lines out.\r\n        const lines = this.chunks.split(\"\\r\\n\");\r\n        this.chunks = lines.pop();\r\n        lines.forEach((line) => controller.enqueue(line));\r\n    }\r\n\r\n    flush(controller) {\r\n        // When the stream is closed, flush any remaining chunks out.\r\n        controller.enqueue(this.chunks);\r\n    }\r\n}\r\n\r\nfunction parseAsNumber(value) {\r\n    if (typeof value == \"number\") {\r\n        return value;\r\n    } else if (typeof value == \"string\" && !isNaN(value) && !isNaN(parseFloat(value))) {\r\n        return parseFloat(value);\r\n    } else if (typeof value == \"object\") {\r\n        // Iterate over keys, return parsed values\r\n        let obj = {};\r\n        Object.keys(value).forEach(key => {\r\n            obj[key] = parseAsNumber(value[key]);\r\n        })\r\n        return obj;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\n// TODO: Change requestAccessOnPageLoad back to false per default, it's true for debugging purposes\r\nconst defaultConstructorObject = {\r\n    baudRate: DEFAULT_BAUDRATE,\r\n    requestButton: null,\r\n    requestAccessOnPageLoad: true,\r\n    accessText: \"To access serial devices, user interaction is required. Please press this button to select the port you want to connect to.\",\r\n    accessButtonLabel: \"Connect to Serial Port\",\r\n    styleDomElements: true,\r\n    transformer: new LineBreakTransformer(),\r\n    logIncomingSerialData: false,\r\n    logOutgoingSerialData: false,\r\n    parseStringsAsNumbers: true,\r\n    // TODO mention this new property in documentation\r\n    warnAboutUnregisteredEvents: true,\r\n    filters: []\r\n}\r\n\r\nexport default class SimpleSerial {\r\n    configuration;\r\n    port;\r\n    writer;\r\n    modal;\r\n    _listeners = {};\r\n    _this = this;\r\n\r\n    constructor(args) {\r\n        if (!navigator.serial) {\r\n            throw new Error(\"The Serial API not supported in your browser. Make sure you've enabled flags if necessary!\");\r\n        }\r\n\r\n        if (typeof args === \"number\") {\r\n            args = {\r\n                ...defaultConstructorObject,\r\n                baudRate: args\r\n            }\r\n        } else if (typeof args === \"undefined\") {\r\n            args = defaultConstructorObject;\r\n        } else if (typeof args === 'object') {\r\n            // TODO check for valid configuration object (transformer, HTML Element, ...)\r\n\r\n            // constructor object, override defaults\r\n            args = {\r\n                ...defaultConstructorObject,\r\n                ...args\r\n            }\r\n        }\r\n\r\n        if (args.requestButton != null) {\r\n            args = {\r\n                requestAccessOnPageLoad: false,\r\n                ...args\r\n            }\r\n        }\r\n\r\n        this.configuration = args;\r\n        console.log(\"SimpleSerial instance created\")\r\n\r\n        // If a button or an id was supplied, attach an event listener to it.\r\n        if (this.configuration.requestButton) {\r\n            this.requestSerialAccessOnClick(this.configuration.requestButton);\r\n        }\r\n\r\n        // If the library should handle requesting access to the serial device, create a modal on page load.\r\n        if (this.configuration.requestAccessOnPageLoad) {\r\n            window.addEventListener(\"load\", this.createModal.bind(this));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    requestSerialAccessOnClick(element) {\r\n        if (typeof element === \"string\") {\r\n            // Search for HTML Element with this id\r\n            const el = document.getElementById(element)\r\n            if (!el) throw \"Could not find element with ID '\" + element + \"'.\"\r\n            element = el;\r\n        }\r\n        element.addEventListener(\"click\", this.connect.bind(this))\r\n    }\r\n\r\n    createModal() {\r\n        this.modal = document.createElement(\"div\");\r\n        this.configuration.styleDomElements ? this.modal.setAttribute(\"style\", \"position: fixed; left: 0; top: 0; width: 100%; height: 100%; left: 0; top: 0; z-index: 10000\") : null;\r\n\r\n        const modalOverlay = document.createElement(\"div\");\r\n        this.configuration.styleDomElements ? modalOverlay.setAttribute(\"style\", \"background-color: rgba(0,0,0,.3); position: absolute; left: 0; top: 0; width: 100%; height: 100%; left: 0; top: 0; cursor: pointer\") : null;\r\n        modalOverlay.classList.add(\"SimpleSerial-modal-overlay\");\r\n\r\n        const modalContainer = document.createElement(\"div\");\r\n        this.configuration.styleDomElements ? modalContainer.setAttribute(\"style\", \"position: absolute; width: 100%; height: auto; padding: 4rem; box-sizing: border-box; \") : null;\r\n        modalContainer.classList.add(\"SimpleSerial-modal-container\");\r\n\r\n        const modalInner = document.createElement(\"div\");\r\n        this.configuration.styleDomElements ? modalInner.setAttribute(\"style\", \"background-color: #fff; border-radius: 4px; padding: 1rem; box-shadow: 0px 2px 11px 4px rgba(0,0,0, .09);\") : null;\r\n        modalInner.classList.add(\"SimpleSerial-modal-inner\");\r\n\r\n        const modalInnerText = document.createElement(\"p\");\r\n        this.configuration.styleDomElements ? modalInnerText.setAttribute(\"style\", \"color: #000\") : null;\r\n        modalInnerText.innerText = this.configuration.accessText;\r\n\r\n        const modalInnerButton = document.createElement(\"button\");\r\n        modalInnerButton.innerText = this.configuration.accessButtonLabel;\r\n        this.requestSerialAccessOnClick(modalInnerButton);\r\n\r\n        modalInner.append(modalInnerText, modalInnerButton);\r\n        modalContainer.append(modalInner);\r\n        this.modal.append(modalOverlay, modalContainer);\r\n\r\n        document.body.append(this.modal);\r\n        return this.modal;\r\n    }\r\n\r\n    removeModal() {\r\n        this.modal.remove();\r\n    }\r\n\r\n    async connect() {\r\n        this.port = await navigator.serial.requestPort({ filters: this.configuration.filters });\r\n        console.log(this.port.getInfo());\r\n        await this.port.open({\r\n            baudRate: this.configuration.baudRate\r\n        })\r\n        if (this.configuration.requestAccessOnPageLoad) {\r\n            this.removeModal();\r\n        }\r\n        const textEncoder = new TextEncoderStream();\r\n        const writableStreamClosed = textEncoder.readable.pipeTo(this.port.writable);\r\n        this.writer = textEncoder.writable.getWriter();\r\n        let decoder = new TextDecoderStream();\r\n        const readableStreamClosed = this.port.readable.pipeTo(decoder.writable)\r\n        const inputStream = decoder.readable;\r\n        const reader = decoder.readable\r\n            .pipeThrough(new TransformStream(this.configuration.transformer))\r\n            .getReader()\r\n        await this.readLoop(reader);\r\n    }\r\n\r\n    on(name, callback) {\r\n        if (!this._listeners[name]) {\r\n            this._listeners[name] = [];\r\n        }\r\n        this._listeners[name].push(callback);\r\n        return [name, callback];\r\n    }\r\n\r\n    removeListener(name, callbackToRemove) {\r\n        if (typeof name == \"object\" && typeof callbackToRemove == \"undefined\") {\r\n            callbackToRemove = name[1]\r\n            name = name[0];\r\n        }\r\n\r\n        if (!this._listeners[name]) {\r\n            throw new Error('There is no listener named ' + name + '.')\r\n        }\r\n\r\n        let length = this._listeners[name].length\r\n\r\n        this._listeners[name] = this._listeners[name].filter((listener) => listener !== callbackToRemove);\r\n        return length !== this._listeners[name].length;\r\n    }\r\n\r\n    // Remove all listeners of event name\r\n    removeListeners(name) {\r\n        if (typeof name !== \"string\") {\r\n            throw new Error(\"removeListeners expects a string as parameter, which will be used to remove all listeners of that event.\");\r\n        }\r\n        const length = this._listeners[name].length\r\n        this._listeners[name] = [];\r\n        return length > 0;\r\n    }\r\n\r\n    async send(name, data) {\r\n        // If only 1 parameter is supplied, it's raw data.\r\n        if (typeof data === \"undefined\") {\r\n            if (this.configuration.logOutgoingSerialData) {\r\n                console.log(name);\r\n            }\r\n\r\n            if (this.configuration.parseStringsAsNumbers) {\r\n                name = parseAsNumber(name);\r\n            }\r\n\r\n            return this.sendData(name);\r\n        }\r\n\r\n        // If data is an object, parse its keys as ints\r\n        if (this.configuration.parseStringsAsNumbers) {\r\n            data = parseAsNumber(data);\r\n        }\r\n\r\n        const event = [name, data]\r\n        const stringified = JSON.stringify(event);\r\n        if (this.configuration.logOutgoingSerialData) {\r\n            console.log(stringified);\r\n        }\r\n        return this.writer.write(stringified + NEW_LINE);\r\n    }\r\n\r\n    async sendEvent(name) {\r\n        return this.send(\"_e\", name);\r\n    }\r\n\r\n    async sendData(data) {\r\n        return this.send(\"_d\", data);\r\n    }\r\n\r\n    emit(name, data) {\r\n        if (this.configuration.warnAboutUnregisteredEvents && !this._listeners[name]) {\r\n            return console.warn('Event ' + name + ' has been received, but it has never been registered as listener.');\r\n        }\r\n        this._listeners[name].forEach(callback => callback(data))\r\n    }\r\n\r\n    async readLoop(reader) {\r\n        while (true) {\r\n            const {value, done} = await reader.read();\r\n            if (value) {\r\n                // Use vanilla for as it's faster than forEach\r\n                // TODO check and validate value as valid JSON\r\n                let json = null;\r\n                try {\r\n                    json = JSON.parse(value)\r\n                } catch (e) {\r\n                    // console.error(e);\r\n                }\r\n                if (json) {\r\n                    if (this.configuration.logIncomingSerialData) {\r\n                        console.log(json);\r\n                    }\r\n                    // If it's an array, handle accordingly\r\n                    if (typeof json == \"object\") {\r\n                        if (json[0] === \"_w\") {\r\n                            console.warn(\"[ARDUINO] \" + json[1]);\r\n                            continue;\r\n                        }\r\n\r\n                        if (json[0] === \"_l\") {\r\n                            console.log(\"[ARDUINO] \" + json[1]);\r\n                            continue;\r\n                        }\r\n\r\n                        if (json[0] === \"_e\") {\r\n                            console.error(\"[ARDUINO] \" + json[1]);\r\n                            continue;\r\n                        }\r\n\r\n                        // Reserved event name 'd': Data transfer. Register a listener \"data\" to listen to it.\r\n                        if (json[0] === \"_d\") {\r\n                            this.emit('data', json[1]);\r\n                            continue;\r\n                        }\r\n\r\n                        this.emit(json[0], json[1]);\r\n                    }\r\n\r\n                    // If it's just a string, just call the event\r\n                    else if (typeof json == \"string\") {\r\n                        this.\r\n                        emit(json, null)\r\n                    }\r\n\r\n                } else {\r\n                    if (this.configuration.logIncomingSerialData) {\r\n                        console.log(value);\r\n                    }\r\n                }\r\n            }\r\n            if (done) {\r\n                console.log('[readLoop] DONE', done);\r\n                reader.releaseLock();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}